// Shrameva CCIS Platform - Prisma Schema
// This is your main Prisma schema file for the Shrameva CCIS platform.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// ===================================================================
// PERSON DOMAIN SCHEMA
// ===================================================================

model Person {
    // Core Identity - Using CID format for consistency
    id        String    @id @db.VarChar(25) // cid_[21-char-nanoid] = 25 chars total
    version   Int       @default(1) // Optimistic concurrency control
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz // Soft delete support

    // Personal Information
    firstName     String   @db.VarChar(100)
    middleName    String?  @db.VarChar(100)
    lastName      String   @db.VarChar(100)
    preferredName String?  @db.VarChar(100)
    dateOfBirth   DateTime @db.Date
    gender        Gender

    // Contact Information
    email            String    @db.VarChar(255)
    emailVerified    Boolean   @default(false)
    emailVerifiedAt  DateTime? @db.Timestamptz
    phone            String    @db.VarChar(20) // International format
    phoneCountryCode String    @db.VarChar(5) // e.g., "+91", "+971"
    phoneVerified    Boolean   @default(false)
    phoneVerifiedAt  DateTime? @db.Timestamptz

    // Address Information
    addressLine1 String?           @db.VarChar(255)
    addressLine2 String?           @db.VarChar(255)
    city         String?           @db.VarChar(100)
    state        String?           @db.VarChar(100)
    postalCode   String?           @db.VarChar(20)
    country      SupportedCountry?

    // Verification & Compliance
    isVerified     Boolean   @default(false)
    verifiedAt     DateTime? @db.Timestamptz
    verifiedBy     String?   @db.VarChar(25) // Reference to verifying person (CID format)
    kycStatus      KYCStatus @default(PENDING)
    kycCompletedAt DateTime? @db.Timestamptz
    trustScore     Float?    @db.Real // 0.0 to 1.0

    // Privacy & Preferences
    privacySettings   Json              @default("{}")
    profileVisibility ProfileVisibility @default(PRIVATE)
    dataSharing       Json              @default("{}") // Granular data sharing preferences

    // Platform Metadata
    lastLoginAt         DateTime?     @db.Timestamptz
    profileCompleteness Int           @default(0) @db.SmallInt // 0-100%
    onboardingCompleted Boolean       @default(false)
    accountStatus       AccountStatus @default(ACTIVE)

    // Skill Passport (Core Innovation)
    skillPassport SkillPassport?

    // Emergency Contacts
    emergencyContacts EmergencyContact[]

    // Social Profiles
    socialProfiles SocialProfile[]

    // Relations
    verifier        Person?  @relation("PersonVerifier", fields: [verifiedBy], references: [id])
    verifiedPersons Person[] @relation("PersonVerifier")

    // Student relation (if person is also a student)
    student Student?

    // Assessment relations
    assessmentSessions    AssessmentSession[]
    taskInteractions      TaskInteraction[]
    competencyAssessments CompetencyAssessment[]
    assessments           Assessment[] // Main assessment entity

    // Indexes for performance
    @@index([email])
    @@index([phone])
    @@index([country, city])
    @@index([kycStatus])
    @@index([isVerified])
    @@index([createdAt])
    @@index([lastLoginAt])
    @@index([accountStatus])
    @@index([deletedAt])
    @@map("persons")
}

// ===================================================================
// SKILL PASSPORT SCHEMA (Core Innovation)
// ===================================================================

model SkillPassport {
    id       String @id @default(cuid()) @db.VarChar(25) // CID format
    personId String @unique @db.VarChar(25) // Person CID reference
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    // Metadata
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz
    version   Int      @default(1)

    // CCIS Framework - 7 Core Competencies
    communicationLevel        Int       @default(1) @db.SmallInt // 1-4 CCIS levels
    communicationEvidence     Json      @default("[]")
    communicationLastAssessed DateTime? @db.Timestamptz

    problemSolvingLevel        Int       @default(1) @db.SmallInt
    problemSolvingEvidence     Json      @default("[]")
    problemSolvingLastAssessed DateTime? @db.Timestamptz

    teamworkLevel        Int       @default(1) @db.SmallInt
    teamworkEvidence     Json      @default("[]")
    teamworkLastAssessed DateTime? @db.Timestamptz

    adaptabilityLevel        Int       @default(1) @db.SmallInt
    adaptabilityEvidence     Json      @default("[]")
    adaptabilityLastAssessed DateTime? @db.Timestamptz

    timeManagementLevel        Int       @default(1) @db.SmallInt
    timeManagementEvidence     Json      @default("[]")
    timeManagementLastAssessed DateTime? @db.Timestamptz

    technicalSkillsLevel        Int       @default(1) @db.SmallInt
    technicalSkillsEvidence     Json      @default("[]")
    technicalSkillsLastAssessed DateTime? @db.Timestamptz

    leadershipLevel        Int       @default(1) @db.SmallInt
    leadershipEvidence     Json      @default("[]")
    leadershipLastAssessed DateTime? @db.Timestamptz

    // Overall CCIS Metrics
    overallCCISLevel   Float     @default(1.0) @db.Real // Calculated average
    totalAssessments   Int       @default(0)
    lastAssessmentDate DateTime? @db.Timestamptz

    // International Context
    assessmentCountry SupportedCountry?
    culturalContext   Json              @default("{}")

    // Sharing & Visibility
    isPublic   Boolean @default(false)
    sharedWith Json    @default("[]") // Array of institution/employer IDs

    // Indexes for CCIS queries
    @@index([overallCCISLevel])
    @@index([communicationLevel, problemSolvingLevel, teamworkLevel])
    @@index([lastAssessmentDate])
    @@map("skill_passports")
}

// ===================================================================
// SUPPORTING MODELS
// ===================================================================

model EmergencyContact {
    id       String @id @default(cuid()) @db.VarChar(25) // CID format
    personId String @db.VarChar(25)
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    name         String  @db.VarChar(200)
    relationship String  @db.VarChar(50)
    phone        String  @db.VarChar(20)
    email        String? @db.VarChar(255)
    isPrimary    Boolean @default(false)

    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    @@index([personId])
    @@map("emergency_contacts")
}

model SocialProfile {
    id       String @id @default(cuid()) @db.VarChar(25) // CID format
    personId String @db.VarChar(25)
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    platform   SocialPlatform
    username   String         @db.VarChar(100)
    profileUrl String?        @db.VarChar(500)
    isVerified Boolean        @default(false)
    isPublic   Boolean        @default(true)

    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    @@unique([personId, platform])
    @@index([personId])
    @@map("social_profiles")
}

// ===================================================================
// STUDENT DOMAIN (Connected to Person)
// ===================================================================

model Student {
    id       String @id @default(cuid()) @db.VarChar(25) // CID format
    personId String @unique @db.VarChar(25)
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    // Student Identity
    studentId        String  @unique @db.VarChar(50) // College-assigned ID
    enrollmentNumber String? @unique @db.VarChar(50)

    // Academic Information
    collegeName    String  @db.VarChar(200)
    collegeCode    String? @db.VarChar(20)
    program        String  @db.VarChar(100)
    specialization String? @db.VarChar(100)
    yearOfStudy    Int     @db.SmallInt
    semester       Int?    @db.SmallInt

    // Enrollment Details
    enrollmentDate         DateTime         @db.Date
    expectedGraduationDate DateTime?        @db.Date
    enrollmentStatus       EnrollmentStatus @default(ACTIVE)

    // Academic Performance
    currentGPA       Float? @db.Real
    totalCredits     Int?   @default(0)
    completedCredits Int?   @default(0)

    // Placement Information
    placementStatus   PlacementStatus @default(NOT_STARTED)
    placementTarget   DateTime?       @db.Date
    placementAchieved Boolean         @default(false)
    placementDate     DateTime?       @db.Date
    placementCompany  String?         @db.VarChar(200)
    placementPackage  Float?          @db.Real // Annual package in local currency
    placementRole     String?         @db.VarChar(100)

    // Metadata
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    // Indexes
    @@index([collegeName])
    @@index([program])
    @@index([yearOfStudy])
    @@index([enrollmentStatus])
    @@index([placementStatus])
    @@index([expectedGraduationDate])
    @@map("students")
}

// ===================================================================
// ENUMS
// ===================================================================

enum Gender {
    MALE
    FEMALE
    NON_BINARY
    PREFER_NOT_TO_SAY
    OTHER
}

enum SupportedCountry {
    INDIA
    UAE
}

enum KYCStatus {
    PENDING
    IN_PROGRESS
    COMPLETED
    REJECTED
    EXPIRED
}

enum ProfileVisibility {
    PUBLIC
    PRIVATE
    CONTACTS_ONLY
    INSTITUTIONS_ONLY
}

enum AccountStatus {
    ACTIVE
    INACTIVE
    SUSPENDED
    DEACTIVATED
    PENDING_VERIFICATION
}

enum SocialPlatform {
    LINKEDIN
    GITHUB
    TWITTER
    INSTAGRAM
    FACEBOOK
    PORTFOLIO_WEBSITE
    OTHER
}

enum EnrollmentStatus {
    ACTIVE
    INACTIVE
    GRADUATED
    DROPPED_OUT
    TRANSFERRED
    SUSPENDED
    ON_BREAK
}

enum PlacementStatus {
    NOT_STARTED
    PREPARING
    APPLYING
    INTERVIEWING
    OFFER_RECEIVED
    PLACED
    NOT_INTERESTED
}

// ===================================================================
// ASSESSMENT DOMAIN SCHEMA - Main Assessment Entity
// ===================================================================

// Main Assessment Entity as per specification
model Assessment {
    id              String         @id @default(cuid()) @db.VarChar(25)
    personId        String         @db.VarChar(25)
    competencyType  CompetencyType
    ccisLevel       Int // 1-4
    confidenceScore Float // 0.0-1.0
    assessmentDate  DateTime       @default(now()) @db.Timestamptz

    // Behavioral Signals (Core CCIS Calculation)
    hintRequestFrequency    Float // Hints per minute
    errorRecoveryTime       Float // Seconds to self-correct
    transferSuccessRate     Float // 0.0-1.0
    metacognitiveAccuracy   Float // 0.0-1.0
    taskCompletionTime      Float // Minutes
    helpSeekingQuality      Float // 0.0-10.0
    selfAssessmentAlignment Float // 0.0-1.0

    // AI Decision Context
    aiReasoningTrace String // LLM decision explanation
    aiModelUsed      String // e.g., "claude-3-5-sonnet"
    aiPromptVersion  String // For A/B testing

    // Assessment Context
    taskIds           String[] // Array of task IDs completed
    sessionDuration   Float // Total minutes in session
    distractionEvents Int // Times student left task interface

    // Progression Tracking
    previousCcisLevel     Int? // Previous level for progression tracking
    nextLevelRequirements String[] // JSON array of requirements
    isLevelProgression    Boolean  @default(false)

    // Validation & Quality
    validationFlags     String[] // Gaming detection, consistency checks
    humanReviewRequired Boolean  @default(false)
    humanReviewNotes    String?

    // Relationships
    person Person @relation(fields: [personId], references: [id])

    @@unique([personId, competencyType, assessmentDate])
    // Indexes
    @@index([personId, competencyType])
    @@index([assessmentDate])
    @@index([ccisLevel, competencyType])
    @@map("assessments")
}

enum CompetencyType {
    BUSINESS_COMMUNICATION
    DATA_ANALYSIS
    TECHNICAL_KNOWLEDGE
    PROJECT_MANAGEMENT
    CRITICAL_THINKING
    LEADERSHIP_COLLABORATION
    INNOVATION_ADAPTABILITY
}

enum TaskType {
    MICRO_CONCEPT
    MICRO_TASK
    FUSION_TASK
}

enum TaskCategory {
    // Communication Categories
    EMAIL_WRITING
    PRESENTATION_SKILLS
    MEETING_FACILITATION
    CLIENT_COMMUNICATION

    // Data Analysis Categories  
    EXCEL_ANALYSIS
    SQL_QUERIES
    DATA_VISUALIZATION
    INSIGHT_GENERATION

    // Technical Categories
    PROGRAMMING_EXERCISE
    SYSTEM_DESIGN
    DEBUGGING_CHALLENGE
    TECHNICAL_DOCUMENTATION

    // Project Management Categories
    PROJECT_PLANNING
    TIMELINE_CREATION
    RISK_ASSESSMENT
    STAKEHOLDER_COMMUNICATION

    // Problem Solving Categories
    ROOT_CAUSE_ANALYSIS
    DECISION_FRAMEWORK
    SCENARIO_ANALYSIS
    CREATIVE_PROBLEM_SOLVING

    // Leadership Categories
    TEAM_COORDINATION
    CONFLICT_RESOLUTION
    DELEGATION_EXERCISE
    MENTORING_SIMULATION

    // Innovation Categories
    PROCESS_IMPROVEMENT
    TECHNOLOGY_ADOPTION
    CHANGE_MANAGEMENT
    CREATIVE_IDEATION
}

// ===================================================================
// EXISTING ASSESSMENT INFRASTRUCTURE MODELS
// ===================================================================

model AssessmentSession {
    // Primary identifiers
    id       String @id @default(cuid()) @db.VarChar(25) // CID format
    personId String @db.VarChar(25)

    // Session configuration
    competencyType String // COMMUNICATION, PROBLEM_SOLVING, etc.
    sessionType    String @default("FORMATIVE") // FORMATIVE, SUMMATIVE, DIAGNOSTIC, REMEDIATION
    status         String @default("PLANNED") // PLANNED, IN_PROGRESS, PAUSED, COMPLETED, TERMINATED, CANCELLED

    // Temporal data
    startTime      DateTime  @db.Timestamptz
    endTime        DateTime? @db.Timestamptz
    maxDuration    Int // minutes
    actualDuration Int? // minutes

    // Assessment context
    culturalContext    String @default("INDIA") // INDIA, UAE, GLOBAL
    languagePreference String @default("english")
    accessibilityNeeds Json   @default("[]")

    // Assessment configuration
    assessmentPurpose      String?
    difficultyLevel        Int     @default(5) // 1-10 scale
    adaptiveEnabled        Boolean @default(true)
    gamingDetectionEnabled Boolean @default(true)

    // Session metadata (JSON)
    sessionMetadata Json @default("{}")

    // Session progress
    currentTaskIndex  Int @default(0)
    totalTasksPlanned Int @default(0)
    tasksCompleted    Int @default(0)

    // Quality metrics
    overallDataQuality    Decimal @default(0) @db.Decimal(3, 2)
    behavioralConsistency Decimal @default(0) @db.Decimal(3, 2)
    engagementLevel       Decimal @default(0) @db.Decimal(3, 2)

    // Gaming detection
    gamingRiskScore        Decimal @default(0) @db.Decimal(3, 2)
    gamingPatternsDetected Json    @default("[]")
    interventionsTriggered Int     @default(0)

    // Performance metrics
    averageTaskDuration Decimal? @db.Decimal(8, 2)
    averageQualityScore Decimal? @db.Decimal(3, 2)
    totalInteractions   Int      @default(0)

    // CCIS progression
    initialCcisLevel      Int? // 1-4 scale
    currentCcisLevel      Int? // 1-4 scale
    confidenceScore       Decimal? @db.Decimal(3, 2)
    levelAdvancementCount Int      @default(0)

    // Cultural effectiveness
    culturalAdaptationScore Decimal? @db.Decimal(3, 2)
    crossCulturalValidation Boolean  @default(false)

    // Scaffolding and adaptation
    scaffoldingAdjustments Json @default("[]")

    // Session outcomes
    outcomeMetrics Json @default("{}")

    // Analytics data
    analyticsData Json @default("{}")

    // System data
    processingMetrics Json @default("{}")

    // Audit fields
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    version   Int       @default(1)
    isDeleted Boolean   @default(false)
    deletedAt DateTime? @db.Timestamptz
    deletedBy String?   @db.VarChar(50)

    // Relationships
    person                Person                 @relation(fields: [personId], references: [id])
    taskInteractions      TaskInteraction[]
    competencyAssessments CompetencyAssessment[]

    @@index([personId])
    @@index([status])
    @@index([competencyType])
    @@index([startTime])
    @@index([culturalContext])
    @@index([personId, status])
    @@index([competencyType, startTime])
    @@map("assessment_sessions")
}

// ===================================================================
// TASK DOMAIN SCHEMA
// ===================================================================

model Task {
    // Primary identifiers
    id        String    @id @db.VarChar(25) // CID format: cid_[21-char-nanoid]
    version   Int       @default(1) // Optimistic concurrency control
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz // Soft delete support

    // Core Task Information
    title        String @db.VarChar(255)
    description  String @db.Text
    instructions String @db.Text
    context      String @db.Text

    // Task Configuration
    expectedDuration Int     @default(5) // Minutes (1-60)
    difficulty       Decimal @default(0.5) @db.Decimal(3, 2) // 0.1-1.0 scale
    targetCCISLevel  Int     @default(1) // 1-4 CCIS levels
    ccisLevelRange   Int[]   @default([1, 2]) // Supported CCIS level range

    // Task Classification
    taskType     TaskType
    taskCategory TaskCategory
    competencyId String       @db.VarChar(25) // Reference to competency

    // Structured Content (JSON fields)
    contentBlocks     Json // TaskContentBlocks interface
    successCriteria   Json // SuccessCriteria interface  
    assessmentRubric  Json // AssessmentRubric interface
    hintsAvailable    Json // CCISLevelHints interface
    scaffoldingConfig Json // ScaffoldingConfiguration interface

    // Performance Metrics
    averageCompletionTime Decimal? // Minutes
    averageSuccessRate    Decimal? @db.Decimal(5, 4) // 0.0000-1.0000
    totalAttempts         Int      @default(0)

    // Content Organization
    tags              String[] @default([]) // Content tags for search/filter
    industryScenario  String?  @db.Text // Real-world context
    prerequisiteTasks String[] @default([]) // Array of prerequisite task CIDs
    followUpTasks     String[] @default([]) // Array of follow-up task CIDs  
    relatedTasks      String[] @default([]) // Array of related task CIDs

    // Lifecycle Management
    publishedAt        DateTime? @db.Timestamptz // When task was published
    deprecatedAt       DateTime? @db.Timestamptz // When task was deprecated
    lastValidationDate DateTime? @db.Timestamptz // Last quality validation
    contentVersion     String?   @db.VarChar(50) // Content versioning

    // Relationships
    interactions TaskInteraction[]

    // Indexes for performance
    @@index([competencyId])
    @@index([taskType])
    @@index([taskCategory])
    @@index([targetCCISLevel])
    @@index([difficulty])
    @@index([publishedAt])
    @@index([deprecatedAt])
    @@index([createdAt])
    @@index([competencyId, taskType])
    @@index([taskCategory, targetCCISLevel])
    @@index([publishedAt, deprecatedAt]) // For active tasks query
    @@map("tasks")
}

model TaskInteraction {
    // Primary identifiers
    id        String @id @default(cuid()) @db.VarChar(25) // CID format
    sessionId String @db.VarChar(25) // CID reference to AssessmentSession
    personId  String @db.VarChar(25)
    taskId    String @db.VarChar(50)

    // Interaction context
    competencyFocus String // COMMUNICATION, PROBLEM_SOLVING, etc.
    taskType        String // MICRO_TASK, FUSION_TASK, ASSESSMENT_TASK
    taskDifficulty  Int    @default(5) // 1-10 scale

    // Temporal data
    interactionTimestamp DateTime  @db.Timestamptz
    startTime            DateTime  @db.Timestamptz
    endTime              DateTime? @db.Timestamptz
    duration             BigInt // milliseconds

    // Interaction data (JSON)
    interactionData Json @default("{}")

    // Behavioral signals (JSON)
    behavioralSignals Json @default("{}")

    // Quality metrics (JSON)
    qualityMetrics Json @default("{}")

    // Contextual factors (JSON)
    contextualFactors Json @default("{}")

    // Gaming detection data (JSON)
    gamingDetectionData Json @default("{}")

    // Analysis results (JSON)
    analysisResults Json @default("{}")

    // Performance metrics (JSON)
    performanceMetrics Json @default("{}")

    // Intervention data (JSON)
    interventionData Json @default("{}")

    // System metadata (JSON)
    systemMetadata Json @default("{}")

    // Computed metrics
    overallQualityScore       Decimal @default(0) @db.Decimal(3, 2)
    gamingRiskScore           Decimal @default(0) @db.Decimal(3, 2)
    learningProgressIndicator Decimal @default(0) @db.Decimal(3, 2)
    culturalAlignmentScore    Decimal @default(0) @db.Decimal(3, 2)

    // Audit fields
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    version   Int       @default(1)
    isDeleted Boolean   @default(false)
    deletedAt DateTime? @db.Timestamptz
    deletedBy String?   @db.VarChar(50)

    // Relationships
    task              Task              @relation(fields: [taskId], references: [id])
    assessmentSession AssessmentSession @relation(fields: [sessionId], references: [id])
    person            Person            @relation(fields: [personId], references: [id])

    @@index([sessionId])
    @@index([personId])
    @@index([taskId])
    @@index([interactionTimestamp])
    @@index([competencyFocus])
    @@index([sessionId, interactionTimestamp])
    @@index([personId, interactionTimestamp])
    @@map("task_interactions")
}

model CompetencyAssessment {
    // Primary identifiers
    id             String @id @default(cuid()) @db.VarChar(25) // CID format
    sessionId      String @db.VarChar(25) // CID reference to AssessmentSession
    personId       String @db.VarChar(25)
    competencyType String // COMMUNICATION, PROBLEM_SOLVING, etc.

    // Assessment metadata
    assessmentDate    DateTime @db.Timestamptz
    assessmentVersion String   @db.VarChar(20)
    assessmentMethod  String   @db.VarChar(30) // BEHAVIORAL, TASK_BASED, PORTFOLIO, PEER_REVIEW
    culturalContext   String // INDIA, UAE, GLOBAL

    // CCIS level data
    ccisLevel          Int // 1-4 scale
    previousCcisLevel  Int? // For progression tracking
    levelConfidence    Decimal @db.Decimal(3, 2)
    levelJustification String? @db.Text

    // Confidence scoring
    confidenceScore   Decimal @db.Decimal(3, 2)
    confidenceFactors Json    @default("{}")

    // Evidence data (JSON)
    evidenceData Json @default("{}")

    // Competency-specific data (JSON)
    competencySpecificData Json @default("{}")

    // Progression data (JSON)
    progressionData Json @default("{}")

    // Cultural adaptation data (JSON)
    culturalAdaptationData Json @default("{}")

    // Assessment analytics (JSON)
    assessmentAnalytics Json @default("{}")

    // Intervention and recommendations (JSON)
    interventionData Json @default("{}")

    // Validation and verification (JSON)
    validationData Json @default("{}")

    // System metadata (JSON)
    systemMetadata Json @default("{}")

    // Computed metrics
    overallCompetencyScore   Decimal @default(0) @db.Decimal(3, 2)
    competencyStrengthRating Decimal @default(0) @db.Decimal(3, 2)
    developmentPriorityScore Decimal @default(0) @db.Decimal(3, 2)
    crossCompetencyImpact    Decimal @default(0) @db.Decimal(3, 2)

    // Quality indicators
    assessmentReliability Decimal @default(0) @db.Decimal(3, 2)
    evidenceCompleteness  Decimal @default(0) @db.Decimal(3, 2)
    validationStrength    Decimal @default(0) @db.Decimal(3, 2)
    culturalRelevance     Decimal @default(0) @db.Decimal(3, 2)

    // Status and lifecycle
    assessmentStatus    String  @default("DRAFT") // DRAFT, VALIDATED, APPROVED, SUPERSEDED, ARCHIVED
    isCurrentAssessment Boolean @default(false)
    supersededBy        String? @db.VarChar(50)

    // Audit fields
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    version   Int       @default(1)
    isDeleted Boolean   @default(false)
    deletedAt DateTime? @db.Timestamptz
    deletedBy String?   @db.VarChar(50)

    // Relationships
    assessmentSession AssessmentSession @relation(fields: [sessionId], references: [id])
    person            Person            @relation(fields: [personId], references: [id])

    @@index([personId])
    @@index([sessionId])
    @@index([competencyType])
    @@index([assessmentDate])
    @@index([personId, competencyType, isCurrentAssessment])
    @@index([competencyType, culturalContext])
    @@map("competency_assessments")
}

// ===================================================================
// AUDIT & COMPLIANCE SCHEMA
// ===================================================================

model AuditEvent {
    // Core Identity
    id        String   @id @default(cuid()) @db.VarChar(25) // CID format
    timestamp DateTime @default(now()) @db.Timestamptz

    // Event Classification
    eventType  String @db.VarChar(50) // Maps to AuditEventType enum
    entityId   String @db.VarChar(255) // ID of the entity being audited
    entityType String @db.VarChar(50) // Type of entity (student, assessment, session)

    // User Context
    userId    String? @db.VarChar(255) // Acting user (for admin actions)
    sessionId String? @db.VarChar(255) // Session identifier

    // Network Context
    ipAddress String? @db.VarChar(45) // IPv6 compatible
    userAgent String? @db.Text

    // Event Data
    metadata          Json // Non-sensitive event metadata
    sensitiveDataHash String? @db.Text // Encrypted/hashed sensitive data

    // Compliance & Retention
    retentionPolicy String? @db.VarChar(50) // Data retention policy
    complianceFlags Json? // GDPR, SOX, etc. compliance markers

    // Indexing for performance
    @@index([eventType])
    @@index([entityId, entityType])
    @@index([userId])
    @@index([timestamp])
    @@index([sessionId])
    @@index([ipAddress])
    @@index([eventType, timestamp])
    @@index([entityId, eventType, timestamp])
    @@map("audit_events")
}

// ===================================================================
// AI TASK GENERATION DOMAIN
// ===================================================================

model AITaskGenerationTemplate {
    id        String    @id @default(cuid()) @db.VarChar(25)
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz

    // Template identity
    name         String @db.VarChar(255)
    description  String @db.Text
    competencyId String @db.VarChar(25)
    ccisLevel    Int // 1-4

    // AI Generation Configuration
    aiModel       String  @default("claude-3-5-sonnet") @db.VarChar(50)
    promptVersion String  @default("v1.0.0") @db.VarChar(20)
    temperature   Decimal @default(0.7) @db.Decimal(3, 2) // 0.0-1.0

    // Template Structure (JSON)
    promptTemplate   Json // Structured prompt for AI generation
    contentStructure Json // Expected output structure
    validationRules  Json // Quality validation criteria
    variationSeeds   Json // Seeds for generating variations

    // Performance Metrics
    successRate     Decimal?  @db.Decimal(5, 4) // 0.0000-1.0000
    averageQuality  Decimal?  @db.Decimal(3, 2) // 0.00-1.00
    generationCount Int       @default(0)
    lastGeneration  DateTime? @db.Timestamptz

    // Relationships
    generatedTasks AIGeneratedTask[]

    @@index([competencyId])
    @@index([ccisLevel])
    @@index([competencyId, ccisLevel])
    @@map("ai_task_generation_templates")
}

model AIGeneratedTask {
    id        String    @id @default(cuid()) @db.VarChar(25)
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz

    // Generation context
    templateId   String @db.VarChar(25)
    taskId       String @db.VarChar(25) // Reference to actual Task
    competencyId String @db.VarChar(25)
    ccisLevel    Int

    // AI Generation Data
    aiModel        String   @db.VarChar(50)
    promptUsed     String   @db.Text
    responseRaw    String   @db.Text
    generationTime BigInt // milliseconds
    tokensUsed     Int?
    costEstimate   Decimal? @db.Decimal(10, 4) // USD

    // Quality Assessment
    qualityScore     Decimal?             @db.Decimal(3, 2) // 0.00-1.00
    validationFlags  Json? // Automated validation results
    humanReviewed    Boolean              @default(false)
    humanReviewScore Decimal?             @db.Decimal(3, 2)
    approvalStatus   AITaskApprovalStatus @default(PENDING)

    // Performance Tracking
    studentAttempts  Int      @default(0)
    successRate      Decimal? @db.Decimal(5, 4)
    averageRating    Decimal? @db.Decimal(3, 2)
    difficultyActual Decimal? @db.Decimal(3, 2) // Calculated from performance

    // Relationships
    template AITaskGenerationTemplate @relation(fields: [templateId], references: [id])

    @@index([templateId])
    @@index([taskId])
    @@index([competencyId])
    @@index([ccisLevel])
    @@index([approvalStatus])
    @@index([qualityScore])
    @@index([createdAt])
    @@map("ai_generated_tasks")
}

// ===================================================================
// LEARNING PATHS DOMAIN
// ===================================================================

model LearningPath {
    id        String    @id @default(cuid()) @db.VarChar(25)
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz

    // Path identity
    name        String @db.VarChar(255)
    description String @db.Text
    personId    String @db.VarChar(25)

    // Path configuration
    competencyFocus       String[] // Primary competencies
    targetCCISLevel       Int      @default(4) // Goal CCIS level
    estimatedDuration     Int // Hours
    difficultyProgression String   @default("adaptive") // linear, adaptive, custom

    // AI Personalization
    aiPersonalized      Boolean @default(true)
    adaptationAlgorithm String  @default("reinforcement_learning") @db.VarChar(50)
    personalityProfile  Json? // Student learning preferences
    performanceHistory  Json? // Historical performance data

    // Path State
    status           LearningPathStatus @default(ACTIVE)
    currentMilestone Int                @default(0)
    progressPercent  Decimal            @default(0) @db.Decimal(5, 2) // 0.00-100.00
    lastActivity     DateTime?          @db.Timestamptz

    // Analytics
    totalTasksCompleted Int      @default(0)
    averageSessionTime  Int? // Minutes
    streakDays          Int      @default(0)
    motivationScore     Decimal? @db.Decimal(3, 2) // 0.00-1.00

    // Relationships
    milestones LearningMilestone[]
    analytics  LearningPathAnalytics[]

    @@index([personId])
    @@index([status])
    @@index([competencyFocus])
    @@index([targetCCISLevel])
    @@index([progressPercent])
    @@map("learning_paths")
}

model LearningMilestone {
    id        String   @id @default(cuid()) @db.VarChar(25)
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    // Milestone identity
    pathId      String @db.VarChar(25)
    order       Int
    name        String @db.VarChar(255)
    description String @db.Text

    // Milestone configuration
    competencyId      String @db.VarChar(25)
    requiredCCISLevel Int
    estimatedHours    Int
    taskSequence      Json // Ordered array of task IDs and configurations

    // AI Generation
    aiGenerated         Boolean @default(false)
    adaptiveAdjustments Json? // AI-driven adjustments based on performance

    // Progress tracking
    status         MilestoneStatus @default(LOCKED)
    completedAt    DateTime?       @db.Timestamptz
    tasksCompleted Int             @default(0)
    totalTasks     Int             @default(1)
    attempts       Int             @default(0)

    // Performance metrics
    bestScore    Decimal? @db.Decimal(5, 4) // 0.0000-1.0000
    averageScore Decimal? @db.Decimal(5, 4)
    timeSpent    Int      @default(0) // Minutes
    hintsUsed    Int      @default(0)
    retryCount   Int      @default(0)

    // Relationships
    path LearningPath @relation(fields: [pathId], references: [id])

    @@index([pathId])
    @@index([order])
    @@index([competencyId])
    @@index([status])
    @@index([requiredCCISLevel])
    @@map("learning_milestones")
}

// ===================================================================
// ADVANCED ANALYTICS DOMAIN
// ===================================================================

model CompetencyAnalytics {
    id        String   @id @default(cuid()) @db.VarChar(25)
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    // Analytics scope
    personId     String   @db.VarChar(25)
    competencyId String   @db.VarChar(25)
    analysisDate DateTime @db.Timestamptz

    // Current state
    currentCCISLevel  Int
    previousCCISLevel Int?
    progressionRate   Decimal @db.Decimal(5, 4) // Level change per week
    confidenceScore   Decimal @db.Decimal(3, 2) // 0.00-1.00
    masteryIndicators Json // Specific mastery evidence

    // Performance metrics
    tasksCompleted        Int
    averageScore          Decimal @db.Decimal(5, 4)
    averageTimePerTask    Decimal @db.Decimal(8, 2) // Minutes
    errorRecoveryRate     Decimal @db.Decimal(5, 4)
    transferSuccessRate   Decimal @db.Decimal(5, 4)
    helpSeekingEfficiency Decimal @db.Decimal(5, 4)

    // Behavioral patterns (JSON)
    learningPatterns Json // Study habits, peak performance times
    strugglingAreas  Json // Specific skill gaps identified
    strengthAreas    Json // Areas of demonstrated excellence
    adaptationNeeds  Json // Recommended interventions

    // Predictive analytics
    projectedCCISLevel Int? // Predicted level in 30 days
    readinessForLevel4 Decimal? @db.Decimal(3, 2) // Probability 0.00-1.00
    industryReadiness  Json // Readiness scores for different industries
    skillGapAnalysis   Json // Gaps compared to industry standards

    @@index([personId])
    @@index([competencyId])
    @@index([analysisDate])
    @@index([currentCCISLevel])
    @@index([personId, competencyId])
    @@map("competency_analytics")
}

model CrossCompetencyAnalytics {
    id        String   @id @default(cuid()) @db.VarChar(25)
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    // Analytics scope
    personId     String   @db.VarChar(25)
    analysisDate DateTime @db.Timestamptz

    // Cross-competency metrics
    overallCCISLevel    Decimal @db.Decimal(3, 2) // Weighted average
    competencyBalance   Decimal @db.Decimal(3, 2) // How evenly developed
    transferAbility     Decimal @db.Decimal(3, 2) // Skill transfer across competencies
    metacognitiveMature Decimal @db.Decimal(3, 2) // Self-awareness across all areas

    // Correlation analysis (JSON)
    competencyCorrelations Json // How competencies influence each other
    strengthClusters       Json // Groups of related strong competencies
    developmentPriorities  Json // Recommended focus areas

    // Industry alignment
    industryFitScores     Json // Fit scores for different industries
    roleReadinessScores   Json // Readiness for specific job roles
    marketDemandAlignment Json // Alignment with current job market

    // Predictive modeling
    careerTrajectories   Json // Possible career paths based on current profile
    skillDevelopmentPlan Json // AI-recommended development plan
    placementProbability Decimal @db.Decimal(3, 2) // Job placement likelihood

    @@index([personId])
    @@index([analysisDate])
    @@index([overallCCISLevel])
    @@map("cross_competency_analytics")
}

model LearningPathAnalytics {
    id        String   @id @default(cuid()) @db.VarChar(25)
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    // Analytics scope
    pathId       String   @db.VarChar(25)
    personId     String   @db.VarChar(25)
    analysisDate DateTime @db.Timestamptz

    // Engagement metrics
    sessionCount         Int
    totalTimeSpent       Int // Minutes
    averageSessionLength Int // Minutes
    longestStreak        Int // Days
    currentStreak        Int // Days
    dropoffRisk          Decimal @db.Decimal(3, 2) // 0.00-1.00

    // Performance progression
    startingCCISLevels    Json // Competency levels at path start
    currentCCISLevels     Json // Current competency levels
    progressionVelocity   Json // Rate of improvement per competency
    difficultyProgression Json // How difficulty has scaled

    // Learning effectiveness
    retentionRate         Decimal  @db.Decimal(5, 4) // Knowledge retention
    transferEffectiveness Decimal  @db.Decimal(5, 4) // Application to new tasks
    adaptationSuccess     Decimal  @db.Decimal(5, 4) // How well AI adaptations work
    satisfactionScore     Decimal? @db.Decimal(3, 2) // Student feedback

    // Optimization insights (JSON)
    bottleneckAnalysis     Json // Where students get stuck
    skipPatterns           Json // Tasks frequently skipped
    retryAnalysis          Json // Tasks requiring multiple attempts
    recommendedAdjustments Json // AI suggestions for path optimization

    // Relationships
    path LearningPath @relation(fields: [pathId], references: [id])

    @@index([pathId])
    @@index([personId])
    @@index([analysisDate])
    @@index([progressionVelocity])
    @@map("learning_path_analytics")
}

// ===================================================================
// ENUMS FOR NEW FEATURES
// ===================================================================

enum AITaskApprovalStatus {
    PENDING
    APPROVED
    REJECTED
    NEEDS_REVISION
    HUMAN_REVIEW_REQUIRED
}

enum LearningPathStatus {
    ACTIVE
    PAUSED
    COMPLETED
    ABANDONED
    ARCHIVED
}

enum MilestoneStatus {
    LOCKED
    AVAILABLE
    IN_PROGRESS
    COMPLETED
    SKIPPED
    FAILED
}
