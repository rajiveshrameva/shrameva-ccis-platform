// Shrameva CCIS Platform - Prisma Schema
// This is your main Prisma schema file for the Shrameva CCIS platform.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// ===================================================================
// PERSON DOMAIN SCHEMA
// ===================================================================

model Person {
    // Core Identity
    id        String    @id @default(uuid()) @db.Uuid
    version   Int       @default(1) // Optimistic concurrency control
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    deletedAt DateTime? @db.Timestamptz // Soft delete support

    // Personal Information
    firstName     String   @db.VarChar(100)
    middleName    String?  @db.VarChar(100)
    lastName      String   @db.VarChar(100)
    preferredName String?  @db.VarChar(100)
    dateOfBirth   DateTime @db.Date
    gender        Gender

    // Contact Information
    email            String    @unique @db.VarChar(255)
    emailVerified    Boolean   @default(false)
    emailVerifiedAt  DateTime? @db.Timestamptz
    phone            String    @unique @db.VarChar(20) // International format
    phoneCountryCode String    @db.VarChar(5) // e.g., "+91", "+971"
    phoneVerified    Boolean   @default(false)
    phoneVerifiedAt  DateTime? @db.Timestamptz

    // Address Information
    addressLine1 String?           @db.VarChar(255)
    addressLine2 String?           @db.VarChar(255)
    city         String?           @db.VarChar(100)
    state        String?           @db.VarChar(100)
    postalCode   String?           @db.VarChar(20)
    country      SupportedCountry?

    // Verification & Compliance
    isVerified     Boolean   @default(false)
    verifiedAt     DateTime? @db.Timestamptz
    verifiedBy     String?   @db.Uuid // Reference to verifying person
    kycStatus      KYCStatus @default(PENDING)
    kycCompletedAt DateTime? @db.Timestamptz
    trustScore     Float?    @db.Real // 0.0 to 1.0

    // Privacy & Preferences
    privacySettings   Json              @default("{}")
    profileVisibility ProfileVisibility @default(PRIVATE)
    dataSharing       Json              @default("{}") // Granular data sharing preferences

    // Platform Metadata
    lastLoginAt         DateTime?     @db.Timestamptz
    profileCompleteness Int           @default(0) @db.SmallInt // 0-100%
    onboardingCompleted Boolean       @default(false)
    accountStatus       AccountStatus @default(ACTIVE)

    // Skill Passport (Core Innovation)
    skillPassport SkillPassport?

    // Emergency Contacts
    emergencyContacts EmergencyContact[]

    // Social Profiles
    socialProfiles SocialProfile[]

    // Relations
    verifier        Person?  @relation("PersonVerifier", fields: [verifiedBy], references: [id])
    verifiedPersons Person[] @relation("PersonVerifier")

    // Student relation (if person is also a student)
    student Student?

    // Assessment relations
    assessmentSessions    AssessmentSession[]
    taskInteractions      TaskInteraction[]
    competencyAssessments CompetencyAssessment[]

    // Indexes for performance
    @@index([email])
    @@index([phone])
    @@index([country, city])
    @@index([kycStatus])
    @@index([isVerified])
    @@index([createdAt])
    @@index([lastLoginAt])
    @@index([accountStatus])
    @@map("persons")
}

// ===================================================================
// SKILL PASSPORT SCHEMA (Core Innovation)
// ===================================================================

model SkillPassport {
    id       String @id @default(uuid()) @db.Uuid
    personId String @unique @db.Uuid
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    // Metadata
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz
    version   Int      @default(1)

    // CCIS Framework - 7 Core Competencies
    communicationLevel        Int       @default(1) @db.SmallInt // 1-4 CCIS levels
    communicationEvidence     Json      @default("[]")
    communicationLastAssessed DateTime? @db.Timestamptz

    problemSolvingLevel        Int       @default(1) @db.SmallInt
    problemSolvingEvidence     Json      @default("[]")
    problemSolvingLastAssessed DateTime? @db.Timestamptz

    teamworkLevel        Int       @default(1) @db.SmallInt
    teamworkEvidence     Json      @default("[]")
    teamworkLastAssessed DateTime? @db.Timestamptz

    adaptabilityLevel        Int       @default(1) @db.SmallInt
    adaptabilityEvidence     Json      @default("[]")
    adaptabilityLastAssessed DateTime? @db.Timestamptz

    timeManagementLevel        Int       @default(1) @db.SmallInt
    timeManagementEvidence     Json      @default("[]")
    timeManagementLastAssessed DateTime? @db.Timestamptz

    technicalSkillsLevel        Int       @default(1) @db.SmallInt
    technicalSkillsEvidence     Json      @default("[]")
    technicalSkillsLastAssessed DateTime? @db.Timestamptz

    leadershipLevel        Int       @default(1) @db.SmallInt
    leadershipEvidence     Json      @default("[]")
    leadershipLastAssessed DateTime? @db.Timestamptz

    // Overall CCIS Metrics
    overallCCISLevel   Float     @default(1.0) @db.Real // Calculated average
    totalAssessments   Int       @default(0)
    lastAssessmentDate DateTime? @db.Timestamptz

    // International Context
    assessmentCountry SupportedCountry?
    culturalContext   Json              @default("{}")

    // Sharing & Visibility
    isPublic   Boolean @default(false)
    sharedWith Json    @default("[]") // Array of institution/employer IDs

    // Indexes for CCIS queries
    @@index([overallCCISLevel])
    @@index([communicationLevel, problemSolvingLevel, teamworkLevel])
    @@index([lastAssessmentDate])
    @@map("skill_passports")
}

// ===================================================================
// SUPPORTING MODELS
// ===================================================================

model EmergencyContact {
    id       String @id @default(uuid()) @db.Uuid
    personId String @db.Uuid
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    name         String  @db.VarChar(200)
    relationship String  @db.VarChar(50)
    phone        String  @db.VarChar(20)
    email        String? @db.VarChar(255)
    isPrimary    Boolean @default(false)

    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    @@index([personId])
    @@map("emergency_contacts")
}

model SocialProfile {
    id       String @id @default(uuid()) @db.Uuid
    personId String @db.Uuid
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    platform   SocialPlatform
    username   String         @db.VarChar(100)
    profileUrl String?        @db.VarChar(500)
    isVerified Boolean        @default(false)
    isPublic   Boolean        @default(true)

    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    @@unique([personId, platform])
    @@index([personId])
    @@map("social_profiles")
}

// ===================================================================
// STUDENT DOMAIN (Connected to Person)
// ===================================================================

model Student {
    id       String @id @default(uuid()) @db.Uuid
    personId String @unique @db.Uuid
    person   Person @relation(fields: [personId], references: [id], onDelete: Cascade)

    // Student Identity
    studentId        String  @unique @db.VarChar(50) // College-assigned ID
    enrollmentNumber String? @unique @db.VarChar(50)

    // Academic Information
    collegeName    String  @db.VarChar(200)
    collegeCode    String? @db.VarChar(20)
    program        String  @db.VarChar(100)
    specialization String? @db.VarChar(100)
    yearOfStudy    Int     @db.SmallInt
    semester       Int?    @db.SmallInt

    // Enrollment Details
    enrollmentDate         DateTime         @db.Date
    expectedGraduationDate DateTime?        @db.Date
    enrollmentStatus       EnrollmentStatus @default(ACTIVE)

    // Academic Performance
    currentGPA       Float? @db.Real
    totalCredits     Int?   @default(0)
    completedCredits Int?   @default(0)

    // Placement Information
    placementStatus   PlacementStatus @default(NOT_STARTED)
    placementTarget   DateTime?       @db.Date
    placementAchieved Boolean         @default(false)
    placementDate     DateTime?       @db.Date
    placementCompany  String?         @db.VarChar(200)
    placementPackage  Float?          @db.Real // Annual package in local currency
    placementRole     String?         @db.VarChar(100)

    // Metadata
    createdAt DateTime @default(now()) @db.Timestamptz
    updatedAt DateTime @updatedAt @db.Timestamptz

    // Indexes
    @@index([collegeName])
    @@index([program])
    @@index([yearOfStudy])
    @@index([enrollmentStatus])
    @@index([placementStatus])
    @@index([expectedGraduationDate])
    @@map("students")
}

// ===================================================================
// ENUMS
// ===================================================================

enum Gender {
    MALE
    FEMALE
    NON_BINARY
    PREFER_NOT_TO_SAY
    OTHER
}

enum SupportedCountry {
    INDIA
    UAE
}

enum KYCStatus {
    PENDING
    IN_PROGRESS
    COMPLETED
    REJECTED
    EXPIRED
}

enum ProfileVisibility {
    PUBLIC
    PRIVATE
    CONTACTS_ONLY
    INSTITUTIONS_ONLY
}

enum AccountStatus {
    ACTIVE
    INACTIVE
    SUSPENDED
    DEACTIVATED
    PENDING_VERIFICATION
}

enum SocialPlatform {
    LINKEDIN
    GITHUB
    TWITTER
    INSTAGRAM
    FACEBOOK
    PORTFOLIO_WEBSITE
    OTHER
}

enum EnrollmentStatus {
    ACTIVE
    INACTIVE
    GRADUATED
    DROPPED_OUT
    TRANSFERRED
    SUSPENDED
    ON_BREAK
}

enum PlacementStatus {
    NOT_STARTED
    PREPARING
    APPLYING
    INTERVIEWING
    OFFER_RECEIVED
    PLACED
    NOT_INTERESTED
}

// ===================================================================
// ASSESSMENT DOMAIN SCHEMA
// ===================================================================

model AssessmentSession {
    // Primary identifiers
    id       String @id @default(uuid()) @db.Uuid
    personId String @db.Uuid

    // Session configuration
    competencyType String // COMMUNICATION, PROBLEM_SOLVING, etc.
    sessionType    String @default("FORMATIVE") // FORMATIVE, SUMMATIVE, DIAGNOSTIC, REMEDIATION
    status         String @default("PLANNED") // PLANNED, IN_PROGRESS, PAUSED, COMPLETED, TERMINATED, CANCELLED

    // Temporal data
    startTime      DateTime  @db.Timestamptz
    endTime        DateTime? @db.Timestamptz
    maxDuration    Int // minutes
    actualDuration Int? // minutes

    // Assessment context
    culturalContext    String @default("INDIA") // INDIA, UAE, GLOBAL
    languagePreference String @default("english")
    accessibilityNeeds Json   @default("[]")

    // Assessment configuration
    assessmentPurpose      String?
    difficultyLevel        Int     @default(5) // 1-10 scale
    adaptiveEnabled        Boolean @default(true)
    gamingDetectionEnabled Boolean @default(true)

    // Session metadata (JSON)
    sessionMetadata Json @default("{}")

    // Session progress
    currentTaskIndex  Int @default(0)
    totalTasksPlanned Int @default(0)
    tasksCompleted    Int @default(0)

    // Quality metrics
    overallDataQuality    Decimal @default(0) @db.Decimal(3, 2)
    behavioralConsistency Decimal @default(0) @db.Decimal(3, 2)
    engagementLevel       Decimal @default(0) @db.Decimal(3, 2)

    // Gaming detection
    gamingRiskScore        Decimal @default(0) @db.Decimal(3, 2)
    gamingPatternsDetected Json    @default("[]")
    interventionsTriggered Int     @default(0)

    // Performance metrics
    averageTaskDuration Decimal? @db.Decimal(8, 2)
    averageQualityScore Decimal? @db.Decimal(3, 2)
    totalInteractions   Int      @default(0)

    // CCIS progression
    initialCcisLevel      Int? // 1-4 scale
    currentCcisLevel      Int? // 1-4 scale
    confidenceScore       Decimal? @db.Decimal(3, 2)
    levelAdvancementCount Int      @default(0)

    // Cultural effectiveness
    culturalAdaptationScore Decimal? @db.Decimal(3, 2)
    crossCulturalValidation Boolean  @default(false)

    // Scaffolding and adaptation
    scaffoldingAdjustments Json @default("[]")

    // Session outcomes
    outcomeMetrics Json @default("{}")

    // Analytics data
    analyticsData Json @default("{}")

    // System data
    processingMetrics Json @default("{}")

    // Audit fields
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    version   Int       @default(1)
    isDeleted Boolean   @default(false)
    deletedAt DateTime? @db.Timestamptz
    deletedBy String?   @db.VarChar(50)

    // Relationships
    person                Person                 @relation(fields: [personId], references: [id])
    taskInteractions      TaskInteraction[]
    competencyAssessments CompetencyAssessment[]

    @@index([personId])
    @@index([status])
    @@index([competencyType])
    @@index([startTime])
    @@index([culturalContext])
    @@index([personId, status])
    @@index([competencyType, startTime])
    @@map("assessment_sessions")
}

model TaskInteraction {
    // Primary identifiers
    id        String @id @default(uuid()) @db.Uuid
    sessionId String @db.Uuid
    personId  String @db.Uuid
    taskId    String @db.VarChar(50)

    // Interaction context
    competencyFocus String // COMMUNICATION, PROBLEM_SOLVING, etc.
    taskType        String // MICRO_TASK, FUSION_TASK, ASSESSMENT_TASK
    taskDifficulty  Int    @default(5) // 1-10 scale

    // Temporal data
    interactionTimestamp DateTime  @db.Timestamptz
    startTime            DateTime  @db.Timestamptz
    endTime              DateTime? @db.Timestamptz
    duration             BigInt // milliseconds

    // Interaction data (JSON)
    interactionData Json @default("{}")

    // Behavioral signals (JSON)
    behavioralSignals Json @default("{}")

    // Quality metrics (JSON)
    qualityMetrics Json @default("{}")

    // Contextual factors (JSON)
    contextualFactors Json @default("{}")

    // Gaming detection data (JSON)
    gamingDetectionData Json @default("{}")

    // Analysis results (JSON)
    analysisResults Json @default("{}")

    // Performance metrics (JSON)
    performanceMetrics Json @default("{}")

    // Intervention data (JSON)
    interventionData Json @default("{}")

    // System metadata (JSON)
    systemMetadata Json @default("{}")

    // Computed metrics
    overallQualityScore       Decimal @default(0) @db.Decimal(3, 2)
    gamingRiskScore           Decimal @default(0) @db.Decimal(3, 2)
    learningProgressIndicator Decimal @default(0) @db.Decimal(3, 2)
    culturalAlignmentScore    Decimal @default(0) @db.Decimal(3, 2)

    // Audit fields
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    version   Int       @default(1)
    isDeleted Boolean   @default(false)
    deletedAt DateTime? @db.Timestamptz
    deletedBy String?   @db.VarChar(50)

    // Relationships
    assessmentSession AssessmentSession @relation(fields: [sessionId], references: [id])
    person            Person            @relation(fields: [personId], references: [id])

    @@index([sessionId])
    @@index([personId])
    @@index([taskId])
    @@index([interactionTimestamp])
    @@index([competencyFocus])
    @@index([sessionId, interactionTimestamp])
    @@index([personId, interactionTimestamp])
    @@map("task_interactions")
}

model CompetencyAssessment {
    // Primary identifiers
    id             String @id @default(uuid()) @db.Uuid
    sessionId      String @db.Uuid
    personId       String @db.Uuid
    competencyType String // COMMUNICATION, PROBLEM_SOLVING, etc.

    // Assessment metadata
    assessmentDate    DateTime @db.Timestamptz
    assessmentVersion String   @db.VarChar(20)
    assessmentMethod  String   @db.VarChar(30) // BEHAVIORAL, TASK_BASED, PORTFOLIO, PEER_REVIEW
    culturalContext   String // INDIA, UAE, GLOBAL

    // CCIS level data
    ccisLevel          Int // 1-4 scale
    previousCcisLevel  Int? // For progression tracking
    levelConfidence    Decimal @db.Decimal(3, 2)
    levelJustification String? @db.Text

    // Confidence scoring
    confidenceScore   Decimal @db.Decimal(3, 2)
    confidenceFactors Json    @default("{}")

    // Evidence data (JSON)
    evidenceData Json @default("{}")

    // Competency-specific data (JSON)
    competencySpecificData Json @default("{}")

    // Progression data (JSON)
    progressionData Json @default("{}")

    // Cultural adaptation data (JSON)
    culturalAdaptationData Json @default("{}")

    // Assessment analytics (JSON)
    assessmentAnalytics Json @default("{}")

    // Intervention and recommendations (JSON)
    interventionData Json @default("{}")

    // Validation and verification (JSON)
    validationData Json @default("{}")

    // System metadata (JSON)
    systemMetadata Json @default("{}")

    // Computed metrics
    overallCompetencyScore   Decimal @default(0) @db.Decimal(3, 2)
    competencyStrengthRating Decimal @default(0) @db.Decimal(3, 2)
    developmentPriorityScore Decimal @default(0) @db.Decimal(3, 2)
    crossCompetencyImpact    Decimal @default(0) @db.Decimal(3, 2)

    // Quality indicators
    assessmentReliability Decimal @default(0) @db.Decimal(3, 2)
    evidenceCompleteness  Decimal @default(0) @db.Decimal(3, 2)
    validationStrength    Decimal @default(0) @db.Decimal(3, 2)
    culturalRelevance     Decimal @default(0) @db.Decimal(3, 2)

    // Status and lifecycle
    assessmentStatus    String  @default("DRAFT") // DRAFT, VALIDATED, APPROVED, SUPERSEDED, ARCHIVED
    isCurrentAssessment Boolean @default(false)
    supersededBy        String? @db.VarChar(50)

    // Audit fields
    createdAt DateTime  @default(now()) @db.Timestamptz
    updatedAt DateTime  @updatedAt @db.Timestamptz
    version   Int       @default(1)
    isDeleted Boolean   @default(false)
    deletedAt DateTime? @db.Timestamptz
    deletedBy String?   @db.VarChar(50)

    // Relationships
    assessmentSession AssessmentSession @relation(fields: [sessionId], references: [id])
    person            Person            @relation(fields: [personId], references: [id])

    @@index([personId])
    @@index([sessionId])
    @@index([competencyType])
    @@index([assessmentDate])
    @@index([personId, competencyType, isCurrentAssessment])
    @@index([competencyType, culturalContext])
    @@map("competency_assessments")
}

// ===================================================================
// AUDIT & COMPLIANCE SCHEMA
// ===================================================================

model AuditEvent {
    // Core Identity
    id        String   @id @default(uuid()) @db.Uuid
    timestamp DateTime @default(now()) @db.Timestamptz

    // Event Classification
    eventType  String @db.VarChar(50) // Maps to AuditEventType enum
    entityId   String @db.VarChar(255) // ID of the entity being audited
    entityType String @db.VarChar(50) // Type of entity (student, assessment, session)

    // User Context
    userId    String? @db.VarChar(255) // Acting user (for admin actions)
    sessionId String? @db.VarChar(255) // Session identifier

    // Network Context
    ipAddress String? @db.VarChar(45) // IPv6 compatible
    userAgent String? @db.Text

    // Event Data
    metadata          Json // Non-sensitive event metadata
    sensitiveDataHash String? @db.Text // Encrypted/hashed sensitive data

    // Compliance & Retention
    retentionPolicy String? @db.VarChar(50) // Data retention policy
    complianceFlags Json? // GDPR, SOX, etc. compliance markers

    // Indexing for performance
    @@index([eventType])
    @@index([entityId, entityType])
    @@index([userId])
    @@index([timestamp])
    @@index([sessionId])
    @@index([ipAddress])
    @@index([eventType, timestamp])
    @@index([entityId, eventType, timestamp])
    @@map("audit_events")
}
