{
  "info": {
    "name": "Shrameva CCIS Platform APIs",
    "description": "Complete API collection for the Shrameva CCIS (Cognitive Competency Intelligence System) Platform.\n\n## About Shrameva\nShrameva revolutionizes skill assessment and placement for engineering students through AI-powered competency measurement and personalized learning paths.\n\n## Key Features\n- 7-Competency Framework: Comprehensive skill assessment\n- CCIS Levels: 4-tier progression system\n- AI-Powered Assessment: Intelligent evaluation\n- Multi-Country Support: India and UAE markets\n- Privacy-First Design: Configurable data sharing\n\n## Core Competencies\n1. Communication\n2. Problem Solving\n3. Teamwork\n4. Adaptability\n5. Time Management\n6. Technical Skills\n7. Leadership\n\n## Getting Started\n1. Set environment variables (base_url, api_key if needed)\n2. Run the requests in sequence\n3. Check response data and status codes\n4. Use the analytics endpoints to track progress\n\nFor more information: https://shrameva.com",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Person Management",
      "description": "Person profile management and skill passport operations",
      "item": [
        {
          "name": "Create Person",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Test for successful person creation",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has person data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "    pm.expect(jsonData).to.have.property('firstName');",
                  "    pm.expect(jsonData).to.have.property('lastName');",
                  "});",
                  "",
                  "pm.test('Skill passport is created', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('skillPassport');",
                  "    pm.expect(jsonData.skillPassport).to.have.property('competencies');",
                  "});",
                  "",
                  "// Save person ID for subsequent requests",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.environment.set('person_id', jsonData.id);",
                  "    console.log('Person created with ID:', jsonData.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Rajesh\",\n  \"lastName\": \"Kumar\",\n  \"middleName\": \"Singh\",\n  \"preferredName\": \"Raj\",\n  \"email\": \"rajesh.kumar@example.com\",\n  \"phone\": \"+919876543210\",\n  \"dateOfBirth\": \"1995-08-15\",\n  \"gender\": \"MALE\",\n  \"addressLine1\": \"123 Main Street\",\n  \"addressLine2\": \"Apt 4B\",\n  \"city\": \"Mumbai\",\n  \"state\": \"Maharashtra\",\n  \"postalCode\": \"400001\",\n  \"country\": \"INDIA\",\n  \"profileVisibility\": \"CONTACTS_ONLY\",\n  \"dataSharing\": {\n    \"analytics\": true,\n    \"marketing\": false,\n    \"thirdParty\": false,\n    \"research\": true\n  },\n  \"marketingOptIn\": false,\n  \"termsAccepted\": true,\n  \"privacyPolicyAccepted\": true,\n  \"kycCompleted\": false,\n  \"source\": \"web\",\n  \"metadata\": {\n    \"referralCode\": \"REF123\",\n    \"campaign\": \"summer2025\",\n    \"device\": \"mobile\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/persons",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "persons"
              ]
            },
            "description": "Creates a new person profile in the Shrameva CCIS platform.\n\n**Features:**\n- Comprehensive validation with business rules\n- Multi-country support (India/UAE)\n- Privacy settings configuration\n- Automatic skill passport creation\n- Event-driven architecture integration\n\n**Business Rules:**\n- Age must be between 16 and 65 years\n- Email must be unique\n- Phone format validated by country\n- Terms and privacy policy acceptance required\n\n**Response:**\n- Complete person profile\n- Initialized skill passport with 7 competencies\n- Privacy-aware data serialization"
          }
        },
        {
          "name": "Get Person by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Person data is complete', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('fullName');",
                  "    pm.expect(jsonData).to.have.property('skillPassport');",
                  "});",
                  "",
                  "pm.test('Skill passport has competencies', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.skillPassport.competencies).to.be.an('array');",
                  "    pm.expect(jsonData.skillPassport.competencies).to.have.lengthOf(7);",
                  "});",
                  "",
                  "pm.test('Privacy settings respected', function () {",
                  "    const jsonData = pm.response.json();",
                  "    // Check that sensitive data is masked based on privacy settings",
                  "    if (jsonData.privacy && jsonData.privacy.maskEmail) {",
                  "        pm.expect(jsonData.email).to.include('***');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/persons/{{person_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "persons",
                "{{person_id}}"
              ]
            },
            "description": "Retrieves a person profile by ID with privacy-aware data serialization.\n\n**Features:**\n- Privacy-aware data masking\n- Complete skill passport information\n- CCIS competency levels\n- Multi-country support\n\n**Privacy Controls:**\n- Email/phone masking based on settings\n- Configurable data visibility\n- Profile access permissions\n\n**Response Data:**\n- Personal information (privacy-filtered)\n- Skill passport with 7 competencies\n- CCIS levels and evidence counts\n- Last updated timestamps"
          }
        },
        {
          "name": "Update Person",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Person updated successfully', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.updatedAt).to.not.be.null;",
                  "});",
                  "",
                  "pm.test('Changes are reflected', function () {",
                  "    const jsonData = pm.response.json();",
                  "    // Verify the updated fields are present",
                  "    pm.expect(jsonData).to.have.property('preferredName');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"personId\": \"{{person_id}}\",\n  \"preferredName\": \"RK\",\n  \"profileVisibility\": \"PUBLIC\",\n  \"dataSharing\": {\n    \"analytics\": true,\n    \"marketing\": true,\n    \"thirdParty\": false,\n    \"research\": true\n  },\n  \"version\": 1,\n  \"reason\": \"Updating profile preferences\",\n  \"source\": \"web\",\n  \"metadata\": {\n    \"updateType\": \"profile_enhancement\",\n    \"userAgent\": \"PostmanTest\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/persons/{{person_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "persons",
                "{{person_id}}"
              ]
            },
            "description": "Updates a person profile with partial update support and optimistic concurrency control.\n\n**Features:**\n- Partial updates (only specified fields)\n- Optimistic concurrency control (version field)\n- Sensitive field change tracking\n- Audit trail support\n- Business rule validation\n\n**Validation:**\n- Reason required for email/phone changes\n- Version conflict detection\n- Field-level validation\n- Business rule enforcement\n\n**Response:**\n- Updated person profile\n- New version number\n- Change timestamp\n- Audit information"
          }
        },
        {
          "name": "List Persons",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has person list', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('persons');",
                  "    pm.expect(jsonData).to.have.property('pagination');",
                  "});",
                  "",
                  "pm.test('Pagination info is present', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.pagination).to.have.property('total');",
                  "    pm.expect(jsonData.pagination).to.have.property('page');",
                  "    pm.expect(jsonData.pagination).to.have.property('limit');",
                  "});",
                  "",
                  "pm.test('Persons array is valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.persons).to.be.an('array');",
                  "    if (jsonData.persons.length > 0) {",
                  "        pm.expect(jsonData.persons[0]).to.have.property('id');",
                  "        pm.expect(jsonData.persons[0]).to.have.property('fullName');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/persons?page=1&limit=10&country=INDIA&verified=true&includeSkillPassport=true",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "persons"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number (1-based)"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Items per page (max 100)"
                },
                {
                  "key": "country",
                  "value": "INDIA",
                  "description": "Filter by country"
                },
                {
                  "key": "verified",
                  "value": "true",
                  "description": "Filter by verification status"
                },
                {
                  "key": "includeSkillPassport",
                  "value": "true",
                  "description": "Include skill passport data"
                }
              ]
            },
            "description": "Retrieves a paginated list of persons with filtering capabilities.\n\n**Query Parameters:**\n- `page`: Page number (default: 1)\n- `limit`: Items per page (max: 100, default: 10)\n- `search`: Search by name or email\n- `country`: Filter by country (INDIA, UAE)\n- `verified`: Filter by verification status\n- `ageMin/ageMax`: Age range filtering\n- `gender`: Filter by gender\n- `ccisLevel`: Filter by minimum CCIS level\n- `includeSkillPassport`: Include passport data\n\n**Response:**\n- Paginated person list\n- Summary information\n- Privacy-filtered data\n- Optional skill passport inclusion"
          }
        },
        {
          "name": "Delete Person",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Deletion confirmed', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success', true);",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});",
                  "",
                  "pm.test('Deletion timestamp present', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('deletedAt');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/persons/{{person_id}}?reason=Testing&confirmDelete=true",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "persons",
                "{{person_id}}"
              ],
              "query": [
                {
                  "key": "reason",
                  "value": "Testing",
                  "description": "Reason for deletion (required)"
                },
                {
                  "key": "confirmDelete",
                  "value": "true",
                  "description": "Confirmation flag (required)"
                }
              ]
            },
            "description": "Deletes a person profile with proper data cleanup and audit trail.\n\n**Requirements:**\n- `reason` query parameter (required)\n- `confirmDelete=true` (required)\n- Appropriate permissions\n\n**Process:**\n- Soft deletion with audit trail\n- Data anonymization\n- External system cleanup\n- Skill passport archival\n- Event notification\n\n**Response:**\n- Deletion confirmation\n- Cleanup summary\n- Audit trail reference\n- Timestamp information"
          }
        },
        {
          "name": "Get Person Analytics",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Analytics data present', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('competencyProgress');",
                  "    pm.expect(jsonData).to.have.property('ccisLevels');",
                  "    pm.expect(jsonData).to.have.property('engagementMetrics');",
                  "});",
                  "",
                  "pm.test('CCIS levels data valid', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.ccisLevels).to.be.an('object');",
                  "    pm.expect(jsonData.ccisLevels).to.have.property('overallLevel');",
                  "});",
                  "",
                  "pm.test('Competency data complete', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.competencyProgress).to.be.an('array');",
                  "    pm.expect(jsonData.competencyProgress).to.have.lengthOf(7);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/persons/{{person_id}}/analytics?period=30d&includeComparisons=true",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "persons",
                "{{person_id}}",
                "analytics"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "30d",
                  "description": "Analytics period (7d, 30d, 90d, 1y)"
                },
                {
                  "key": "includeComparisons",
                  "value": "true",
                  "description": "Include peer comparisons"
                }
              ]
            },
            "description": "Retrieves comprehensive analytics for a person's skill development and progress.\n\n**Query Parameters:**\n- `period`: Analytics timeframe (7d, 30d, 90d, 1y)\n- `includeComparisons`: Include peer comparisons\n- `competencies`: Specific competencies to analyze\n\n**Analytics Data:**\n- CCIS level progression across 7 competencies\n- Evidence submission patterns\n- Learning path progress\n- Engagement metrics\n- Placement readiness score\n- Peer comparisons (optional)\n\n**Response:**\n- Competency-wise progress\n- Overall CCIS levels\n- Trends and insights\n- Recommendations\n- Benchmarking data"
          }
        }
      ]
    },
    {
      "name": "Platform Analytics",
      "description": "Global platform analytics and summary information",
      "item": [
        {
          "name": "Get Platform Summary",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Summary data present', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('totalPersons');",
                  "    pm.expect(jsonData).to.have.property('verifiedPersons');",
                  "    pm.expect(jsonData).to.have.property('avgCcisLevel');",
                  "});",
                  "",
                  "pm.test('Country breakdown available', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('countryBreakdown');",
                  "    pm.expect(jsonData.countryBreakdown).to.be.an('object');",
                  "});",
                  "",
                  "pm.test('Competency stats present', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('competencyDistribution');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/persons/analytics/summary",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "persons",
                "analytics",
                "summary"
              ]
            },
            "description": "Retrieves platform-wide analytics and summary statistics.\n\n**Analytics Include:**\n- Total registered persons\n- Verification statistics\n- Country-wise breakdown\n- Average CCIS levels\n- Competency distribution\n- Age demographics\n- Engagement metrics\n- Growth trends\n\n**Response Data:**\n- Platform overview\n- User demographics\n- Skill development trends\n- Regional insights\n- Performance benchmarks"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "description": "Base URL for the Shrameva CCIS Platform API"
    },
    {
      "key": "person_id",
      "value": "",
      "description": "Person ID for testing (auto-populated from create request)"
    }
  ]
}
